!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.single_icon=e():n.single_icon=e()}(window,(function(){return d=[function(module,exports){eval('looker.plugins.visualizations.add({\n  options: {\n    icon_uri: {\n      section: "Icon",\n      type: "string",\n      label: "Icon URI",\n      display: "text",\n      default:\n        "https://upload-icon.s3.us-east-2.amazonaws.com/uploads/icons/png/4987286121594941299-512.png",\n    },\n    icon_height: {\n      section: "Icon",\n      type: "string",\n      label: "Icon Height",\n      display: "text",\n      default: "30px",\n    },\n    icon_width: {\n      section: "Icon",\n      type: "string",\n      label: "Icon Width",\n      display: "text",\n      default: "30px",\n    },\n    icon_note: {\n      section: "Icon",\n      type: "string",\n      label: "Icon Hover Note",\n      display: "text",\n      default: "",\n    },\n    icon_left_margin: {\n      section: "Icon",\n      type: "string",\n      label: "Icon Left Margin",\n      display: "text",\n      default: "6REM",\n    },\n    flexible: {\n      section: "Styling",\n      type: "boolean",\n      label: "Auto-sizing and layout",\n      default: false, \n    },\n    left_right: {\n      section: "Styling",\n      type: "boolean",\n      label: "Align icon on left or right",\n      default: false,\n    },\n    background: {\n      section: "Styling",\n      type: "array",\n      label: "Fill color",\n      display: "color",\n      default: "coral",\n    },\n    alignment: {\n      section: "Styling",\n      type: "string",\n      label: "Value text alignment",\n      display: "text",\n      default: "left",\n    },\n    border_radius: {\n      section: "Styling",\n      type: "string",\n      label: "Border Radius",\n      display: "text",\n      default: "20px",\n    },\n    title_label: {\n      section: "Title",\n      type: "string",\n      label: "Label",\n      placeholder: "Single Value",\n    },\n    title_font_size: {\n      section: "Title",\n      type: "string",\n      label: "Font Size",\n      placeholder: "16px",\n      default: "16px",\n    },\n    title_font_family: {\n      section: "Title",\n      type: "string",\n      label: "Font Family",\n      placeholder: "Open Sans",\n      default: "Open Sans",\n    },\n    title_font_weight: {\n      section: "Title",\n      type: "string",\n      label: "Font Weight",\n      placeholder: "normal",\n      default: "normal",\n    },\n    title_color: {\n      section: "Title",\n      type: "array",\n      label: "Fill color",\n      display: "color",\n      default: "black",\n    },\n    headerMarginLeft: {\n      section: "Title",\n      type: "string",\n      label: "Header left margin",\n      display: "text",\n      default: "0px",\n    },\n    value_font_size: {\n      section: "Value",\n      type: "string",\n      label: "Font Size",\n      placeholder: "16px",\n      default: "16px",\n    },\n    value_color: {\n      section: "Value",\n      type: "array",\n      label: "Fill color",\n      display: "color",\n      default: "black",\n    },\n    value_font_family: {\n      section: "Value",\n      type: "string",\n      label: "Font Family",\n      placeholder: "Open Sans",\n      default: "Open Sans",\n    },\n    value_font_weight: {\n      section: "Value",\n      type: "string",\n      label: "Font Weight",\n      placeholder: "normal",\n      default: "bold",\n    },\n  },\n  create: function (element, config) {\n    element.innerHTML = `<div class="single_value">Rendering...</div>`;\n  },\n  updateAsync: function (\n    data,\n    element,\n    config,\n    queryResponse,\n    details,\n    doneRendering\n  ) {\n    element.innerHTML = "";\n    let values = queryResponse.fields.measure_like.map((field) => {\n      let key = field.label;\n      let value = field.name;\n      return { [key]: value };\n    });\n\n    let options = this.options;\n\n    options["headerData"] = {\n      section: "Value",\n      type: "string",\n      label: "Measures for Header",\n      display: "select",\n      values: values,\n    };\n\n    this.trigger("registerOptions", options); // register options with parent page to update visConfig\n\n    // Grab the first cell of the data\n    var firstRow = data[0];\n    var firstCell = firstRow[config.headerData];\n    var value = firstCell ? LookerCharts.Utils.htmlForCell(firstCell) : "";\n\n    var styleEl = document.createElement("style");\n    styleEl.setAttribute("type", "text/css");\n    styleEl.innerHTML = `\n          @font-face {\n            font-family: Open Sans;\n            src: url( https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2 );\n          }\n          div {\n            background-color: ${config.background};\n            text-align: ${config.alignment}\n          }\n          img {\n            height: ${config.icon_height};\n            width: ${config.icon_width};\n            margin: 10px 10px auto;\n            margin-left: ${config.icon_left_margin};\n          }\n          .headerDiv {\n            display: flex;\n            justify-content: space-between;\n            font-family: ${config.title_font_family};\n            color: ${config.title_color};\n            font-size: ${config.flexible ? \'auto\' : config.title_font_size};\n            font-weight: ${config.title_font_weight};\n          }\n          #vis {\n            border-radius: ${config.border_radius};\n            padding: 10px;\n            width: calc(100% - 40px);\n            display: flex;\n            justify-content: space-between;\n            flex-direction: column;\n          }\n          span {\n            margin-top: ${config.flexible ? \'auto\' : \'10px\'};\n            margin-left: ${config.flexible ? \'auto\' : config.headerMarginLeft}\n          }\n          a {\n            font-family: ${config.value_font_family};\n            color: ${config.value_color};\n            font-size: ${config.flexible ? \'auto\' : config.value_font_size};\n            font-weight: ${config.value_font_weight};\n            text-decoration: none;\n          }\n          .value {\n            font-family: ${config.value_font_family};\n            color: ${config.value_color};\n            font-size: ${config.flexible ? \'auto\' : config.value_font_size};\n            text-decoration: none;\n            font-weight: ${config.value_font_weight};\n          }        \n          .headerDiv .tooltiptext {\n            visibility: hidden;\n            width: 200px;\n            background-color: #555;\n            color: #fff;\n            text-align: center;\n            border-radius: 6px;\n            padding: 5px 0;\n            position: absolute;\n            z-index: 100;\n            right: 65px;\n            opacity: 0;\n            transition: opacity 0.3s;\n          }\n          \n          .headerDiv .tooltiptext::after {\n            content: "";\n            position: absolute;\n            right: 65px;\n            border-width: 5px;\n            border-style: solid;\n            border-color: #555 transparent transparent transparent;\n          }\n          \n          .headerDiv:hover .tooltiptext {\n            visibility: visible;\n            opacity: 1;\n          }\n          .container {\n            display: flex; /* or inline-flex */\n            flex-direction: row;\n            justify-content: flex-start;\n            align-items: center;\n          }\n          .title_value {\n            display: flex;\n            flex-direction: column;\n          }\n          ;`;\n\n    document.head.appendChild(styleEl);\n\n    if (config.left_right) {\n      // upper right aligned icon\n      var headerDiv = document.createElement("div");\n      headerDiv.setAttribute("class", "headerDiv");\n\n      var labelSpan = document.createElement("span");\n      labelSpan.innerHTML = config.title_label;\n      headerDiv.appendChild(labelSpan);\n\n      var img = document.createElement("img");\n      img.setAttribute("src", config.icon_uri);\n      headerDiv.appendChild(img);\n\n      if (config.icon_note && config.icon_note.length > 0) {\n        var tooltipSpan = document.createElement("span");\n        tooltipSpan.setAttribute("class", "tooltiptext");\n        tooltipSpan.innerHTML = config.icon_note;\n        headerDiv.appendChild(tooltipSpan);\n      }\n\n      var valueDiv = document.createElement("div");\n      valueDiv.setAttribute("class", "value");\n      valueDiv.innerHTML = value;\n\n      element.appendChild(headerDiv);\n      element.appendChild(valueDiv);\n    } else {\n      // left aligned icon\n      var containerDiv = document.createElement("div");\n      containerDiv.setAttribute("class", "container");\n\n      var img = document.createElement("img");\n      img.setAttribute("src", config.icon_uri);\n      containerDiv.appendChild(img);\n\n      var titleValueDiv = document.createElement("div");\n      titleValueDiv.setAttribute("class", "title_value");\n      \n      var headerDiv = document.createElement("div");\n      headerDiv.setAttribute("class", "headerDiv");\n\n      var labelSpan = document.createElement("span");\n      labelSpan.innerHTML = config.title_label;\n      headerDiv.appendChild(labelSpan);\n\n      if (config.icon_note && config.icon_note.length > 0) {\n        var tooltipSpan = document.createElement("span");\n        tooltipSpan.setAttribute("class", "tooltiptext");\n        tooltipSpan.innerHTML = config.icon_note;\n        headerDiv.appendChild(tooltipSpan);\n      }\n\n      titleValueDiv.appendChild(headerDiv)\n\n      var valueDiv = document.createElement("div");\n      valueDiv.setAttribute("class", "value");\n      valueDiv.innerHTML = value;\n\n      titleValueDiv.appendChild(valueDiv);\n      containerDiv.appendChild(titleValueDiv);\n\n      element.appendChild(containerDiv);\n    }\n    doneRendering();\n  },\n});\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/visualizations/single_icon.js?')}],e={},f.m=d,f.c=e,f.d=function(n,e,t){f.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},f.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},f.t=function(n,e){if(1&e&&(n=f(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(f.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)f.d(t,i,function(e){return n[e]}.bind(null,i));return t},f.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return f.d(e,"a",e),e},f.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},f.p="",f(f.s=0);function f(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return d[n].call(t.exports,t,t.exports,f),t.l=!0,t.exports}var d,e}));